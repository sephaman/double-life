<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
		   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config/>

	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
	<!-- 	<beans:property name="saltSource" ref="sussSaltSource" />-->
		<beans:property name="passwordEncoder" ref="passwordEncoder" />   
	</beans:bean>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
 	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider"  />
	</authentication-manager>

	<global-method-security secured-annotations="enabled" />

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/session-expired.form" />
	</beans:bean>

	<beans:bean id="sessionControlStrategy"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="2" />
	</beans:bean>

	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sessionControlStrategy" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<http auto-config="true">
		<access-denied-handler error-page="/accessDenied.form"/>

		<intercept-url pattern="/resources/css/**" filters="none" />
		<intercept-url pattern="/resources/img/**" filters="none" />
		<intercept-url pattern="/resources/js/**" filters="none" />
		<intercept-url pattern="/sessionExpired.form" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/sessionInvalid.form" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/login.form" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/userRegistration.htm" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/forgotPassword.htm" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/stockSearch.htm" access="ROLE_USER"/>

		<form-login login-page="/login.form"
			authentication-failure-url="/login.form?login_error=true"
			default-target-url="/fantasyBetHome.htm"
			always-use-default-target="true" />

		<logout logout-success-url="/login.form"
			logout-url="/j_spring_security_logout"
			invalidate-session="true" />

		<session-management invalid-session-url="/login.form?logout=true"
			session-authentication-error-url="/login.form?login_error=true"
			session-fixation-protection="newSession">
		</session-management>
	</http>

</beans:beans>